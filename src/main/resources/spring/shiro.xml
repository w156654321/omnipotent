<!--<?xml version="1.0" encoding="UTF-8"?>-->
<!--<beans xmlns="http://www.springframework.org/schema/beans"-->
	<!--xmlns:context="http://www.springframework.org/schema/context" xmlns:p="http://www.springframework.org/schema/p"-->
	<!--xmlns:aop="http://www.springframework.org/schema/aop" xmlns:tx="http://www.springframework.org/schema/tx"-->
	<!--xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"-->
	<!--xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-4.0.xsd-->
	<!--http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.0.xsd-->
	<!--http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-4.0.xsd http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-4.0.xsd-->
	<!--http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util-4.0.xsd">-->

	<!--<bean id="lifecycleBeanPostProcessor" class="org.apache.shiro.spring.LifecycleBeanPostProcessor"></bean>-->

	<!--&lt;!&ndash; 数据库保存的密码是使用MD5算法加密的，所以这里需要配置一个密码匹配对象 &ndash;&gt;-->
	<!--&lt;!&ndash;<bean id="credentialsMatcher" class="org.apache.shiro.authc.credential.Md5CredentialsMatcher"></bean>&ndash;&gt;-->
	<!--<bean id="credentialsMatcher" class="org.apache.shiro.authc.credential.HashedCredentialsMatcher">-->
		<!--<property name="hashAlgorithmName" value="MD5"></property> &lt;!&ndash; 加密算法的名称 &ndash;&gt;-->
		<!--<property name="hashIterations" value="1024"></property> &lt;!&ndash; 配置加密的次数 &ndash;&gt;-->
	<!--</bean>-->
	<!--&lt;!&ndash; 缓存管理 &ndash;&gt;-->
	<!--<bean id="cacheManager" class="org.apache.shiro.cache.MemoryConstrainedCacheManager"></bean>-->

	<!--&lt;!&ndash;-->
      <!--使用Shiro自带的JdbcRealm类-->
      <!--指定密码匹配所需要用到的加密对象-->
      <!--指定存储用户、角色、权限许可的数据源及相关查询语句-->
     <!--&ndash;&gt;-->
	<!--<bean id="jdbcRealm" class="org.apache.shiro.realm.jdbc.JdbcRealm">-->
		<!--<property name="credentialsMatcher" ref="credentialsMatcher"></property>-->
		<!--<property name="permissionsLookupEnabled" value="true"></property>-->
		<!--<property name="dataSource" ref="dataSource"></property>-->
		<!--<property name="authenticationQuery"-->
				  <!--value="SELECT pswd FROM u_user WHERE email =  ?"></property>-->
		<!--<property name="userRolesQuery"-->
				  <!--value="SELECT r.name FROM u_user_role ur LEFT JOIN u_role r ON ur.rid = r.id LEFT JOIN u_user u ON ur.uid = u.id WHERE email =  ?"></property>-->
		<!--<property name="permissionsQuery"-->
				  <!--value="SELECT p.name FROM  u_role_permission up LEFT JOIN u_role r ON r.id = up.rid LEFT JOIN u_permission p ON p.id = up.pid WHERE r.name = ?"></property>-->
	<!--</bean>-->

	<!--&lt;!&ndash; Shiro安全管理器 &ndash;&gt;-->
	<!--<bean id="securityManager" class="org.apache.shiro.web.mgt.DefaultWebSecurityManager">-->
		<!--<property name="realm" ref="jdbcRealm"></property>-->
		<!--<property name="cacheManager" ref="cacheManager"></property>-->
	<!--</bean>-->

	<!--&lt;!&ndash;-->
       <!--Shiro主过滤器本身功能十分强大，其强大之处就在于它支持任何基于URL路径表达式的、自定义的过滤器的执行-->
       <!--Web应用中，Shiro可控制的Web请求必须经过Shiro主过滤器的拦截，Shiro对基于Spring的Web应用提供了完美的支持-->
    <!--&ndash;&gt;-->
	<!--<bean id="shiroFilter" class="org.apache.shiro.spring.web.ShiroFilterFactoryBean">-->
		<!--&lt;!&ndash; Shiro的核心安全接口，这个属性是必须的 &ndash;&gt;-->
		<!--<property name="securityManager" ref="securityManager"></property>-->
		<!--&lt;!&ndash; 要求登录时的链接(登录页面地址)，非必须的属性，默认会自动寻找Web工程根目录下的"/login.jsp"页面 &ndash;&gt;-->
		<!--<property name="loginUrl" value="/login"></property>-->
		<!--&lt;!&ndash; 登录成功后要跳转的连接(本例中此属性用不到，因为登录成功后的处理逻辑在LoginController里硬编码) &ndash;&gt;-->
		<!--&lt;!&ndash; <property name="successUrl" value="/" ></property> &ndash;&gt;-->
		<!--&lt;!&ndash; 用户访问未对其授权的资源时，所显示的连接 &ndash;&gt;-->
		<!--<property name="unauthorizedUrl" value="/"></property>-->
		<!--<property name="filterChainDefinitions">-->
			<!--<value>-->
				<!--/security/*=anon-->
				<!--/tag=authc-->
			<!--</value>-->
		<!--</property>-->
	<!--</bean>-->

	<!--&lt;!&ndash;-->
       <!--开启Shiro的注解(如@RequiresRoles，@RequiresPermissions)，需借助SpringAOP扫描使用Shiro注解的类，-->
       <!--并在必要时进行安全逻辑验证-->
    <!--&ndash;&gt;-->
	<!--&lt;!&ndash;-->
    <!--<bean-->
        <!--class="org.springframework.aop.framework.autoproxy.DefaultAdvisorAutoProxyCreator"></bean>-->
    <!--<bean-->
        <!--class="org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor">-->
        <!--<property name="securityManager" ref="securityManager"></property>-->
    <!--</bean>-->
    <!--&ndash;&gt;-->
<!--</beans>-->